"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[6234],{3905:function(e,t,n){n.d(t,{Zo:function(){return s},kt:function(){return d}});var r=n(67294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var p=r.createContext({}),c=function(e){var t=r.useContext(p),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},s=function(e){var t=c(e.components);return r.createElement(p.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},m=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,i=e.originalType,p=e.parentName,s=l(e,["components","mdxType","originalType","parentName"]),m=c(n),d=a,h=m["".concat(p,".").concat(d)]||m[d]||u[d]||i;return n?r.createElement(h,o(o({ref:t},s),{},{components:n})):r.createElement(h,o({ref:t},s))}));function d(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var i=n.length,o=new Array(i);o[0]=m;var l={};for(var p in t)hasOwnProperty.call(t,p)&&(l[p]=t[p]);l.originalType=e,l.mdxType="string"==typeof e?e:a,o[1]=l;for(var c=2;c<i;c++)o[c]=n[c];return r.createElement.apply(null,o)}return r.createElement.apply(null,n)}m.displayName="MDXCreateElement"},18951:function(e,t,n){n.r(t),n.d(t,{frontMatter:function(){return l},contentTitle:function(){return p},metadata:function(){return c},toc:function(){return s},default:function(){return m}});var r=n(87462),a=n(63366),i=(n(67294),n(3905)),o=["components"],l={sidebar_position:1},p="Architecture Overview",c={unversionedId:"quickGuide/architecture",id:"quickGuide/architecture",isDocsHomePage:!1,title:"Architecture Overview",description:"The-Microservice-Dungeon is a microservice architecture project.",source:"@site/docs/quickGuide/architecture.md",sourceDirName:"quickGuide",slug:"/quickGuide/architecture",permalink:"/docs/quickGuide/architecture",editUrl:"https://github.com/The-Microservice-Dungeon/docs/edit/main/docs/quickGuide/architecture.md",tags:[],version:"current",sidebarPosition:1,frontMatter:{sidebar_position:1},sidebar:"tutorialSidebar",previous:{title:"Quickstart Guide Overview",permalink:"/docs/quickstart_entry"},next:{title:"Project Installation",permalink:"/docs/quickGuide/installation"}},s=[{value:"Game",id:"game",children:[]},{value:"Player",id:"player",children:[]},{value:"Robot",id:"robot",children:[]},{value:"Trading",id:"trading",children:[]},{value:"Map Service",id:"map-service",children:[]},{value:"GameLog",id:"gamelog",children:[]},{value:"Links to Repositories",id:"links-to-repositories",children:[]}],u={toc:s};function m(e){var t=e.components,l=(0,a.Z)(e,o);return(0,i.kt)("wrapper",(0,r.Z)({},u,l,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"architecture-overview"},"Architecture Overview"),(0,i.kt)("p",null,"The-Microservice-Dungeon is a microservice architecture project."),(0,i.kt)("p",null,"We have build several microservices, which are communicating with each other."),(0,i.kt)("p",null,(0,i.kt)("img",{alt:"Overview",src:n(85200).Z})),(0,i.kt)("p",null,"This picture is a great starting point to understand how The-Microservice-Dungeon is working."),(0,i.kt)("h2",{id:"game"},"Game"),(0,i.kt)("p",null,"This service is the orchestrater of the project."),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},(0,i.kt)("inlineCode",{parentName:"p"},"Players")," regestiers with the Game Service.")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},(0,i.kt)("inlineCode",{parentName:"p"},"Players")," can join a ",(0,i.kt)("inlineCode",{parentName:"p"},"Game"),".")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"When a ",(0,i.kt)("inlineCode",{parentName:"p"},"Game")," is started, it orchastrates the timing on the base of which the other services are communicating.")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},(0,i.kt)("inlineCode",{parentName:"p"},"Players")," are sending Commands to the ",(0,i.kt)("inlineCode",{parentName:"p"},"Game"),". These Commands are collected for the specific round and forewarded to the recivieng microsercie. E.g. if a ",(0,i.kt)("inlineCode",{parentName:"p"},"player")," wants a ",(0,i.kt)("inlineCode",{parentName:"p"},"Robot")," to move, the ",(0,i.kt)("inlineCode",{parentName:"p"},"Robot")," recevies the command"))),(0,i.kt)("h2",{id:"player"},"Player"),(0,i.kt)("p",null,"The ",(0,i.kt)("inlineCode",{parentName:"p"},"Players")," join the ",(0,i.kt)("inlineCode",{parentName:"p"},"Game")," and issue commands to interact with The-Microservice-Dungeon."),(0,i.kt)("h2",{id:"robot"},"Robot"),(0,i.kt)("p",null,"The ",(0,i.kt)("inlineCode",{parentName:"p"},"Robots")," are like the extendet arm of the ",(0,i.kt)("inlineCode",{parentName:"p"},"Player"),"."),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"The ",(0,i.kt)("inlineCode",{parentName:"li"},"Player")," issues a command to a ",(0,i.kt)("inlineCode",{parentName:"li"},"Robot")," which then can interact with the ",(0,i.kt)("inlineCode",{parentName:"li"},"Map")," or with other ",(0,i.kt)("inlineCode",{parentName:"li"},"Robots"),". E.g. move to another Planet on the ",(0,i.kt)("inlineCode",{parentName:"li"},"Map"),".")),(0,i.kt)("h2",{id:"trading"},"Trading"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"Trading")," is used in three different ways"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"First it acts as a bank depot for the ",(0,i.kt)("inlineCode",{parentName:"p"},"Players"),", and controlls if the ",(0,i.kt)("inlineCode",{parentName:"p"},"Players")," has enough moneten \ud83d\udcb8 for a purchase.")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},'Second it can generate Robots after an Issues "buy robot" command of the ',(0,i.kt)("inlineCode",{parentName:"p"},"Player"),".")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"Third ",(0,i.kt)("inlineCode",{parentName:"p"},"Trading")," is controling the economy, by adjusting prices, in relation to the ",(0,i.kt)("inlineCode",{parentName:"p"},"Game"),"-situation on the battlefied.")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"Forth ",(0,i.kt)("inlineCode",{parentName:"p"},"Players")," upgrade their ",(0,i.kt)("inlineCode",{parentName:"p"},"Robots"),' by buing upgrades or single use Items with the "buy" command'))),(0,i.kt)("h2",{id:"map-service"},"Map Service"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"The Map service manages the gameworld(map) and is responsible for generating and linking planets and generating their resources.")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"Planets can be spacestations, whrere trading is posible.")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"A minable ressource is located on a planet.")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"The ",(0,i.kt)("inlineCode",{parentName:"p"},"Robots")," are moving across the planets.")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"The information about neighbouring Planets is providet by the ",(0,i.kt)("inlineCode",{parentName:"p"},"Map")))),(0,i.kt)("h2",{id:"gamelog"},"GameLog"),(0,i.kt)("p",null,"This service tracks the progress of the ",(0,i.kt)("inlineCode",{parentName:"p"},"Players")," and the ",(0,i.kt)("inlineCode",{parentName:"p"},"Game"),"."),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"On one hand it works as a log service for the ",(0,i.kt)("inlineCode",{parentName:"p"},"Game")," and protocols the commands.")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"On the other hand it serves as a leaderboard, which displays the ",(0,i.kt)("inlineCode",{parentName:"p"},"Players")," progress throug points and achivements"))),(0,i.kt)("h2",{id:"links-to-repositories"},"Links to Repositories"),(0,i.kt)("ol",null,(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("a",{parentName:"li",href:"https://github.com/The-Microservice-Dungeon/robot"},"Robot")),(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("a",{parentName:"li",href:"https://github.com/The-Microservice-Dungeon/game"},"Game")),(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("a",{parentName:"li",href:"https://github.com/The-Microservice-Dungeon/trading"},"Trading")),(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("a",{parentName:"li",href:"https://github.com/The-Microservice-Dungeon/gamelog"},"Gamelog")),(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("a",{parentName:"li",href:"https://github.com/The-Microservice-Dungeon/map"},"Map")),(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("a",{parentName:"li",href:"https://github.com/The-Microservice-Dungeon/generic-player"},"Sceleton Player")," (You can use this to get a head start in player development)")))}m.isMDXComponent=!0},85200:function(e,t,n){t.Z=n.p+"assets/images/gameflow-81c8f3ce40c5c6fd3be018e82bdcbdaa.png"}}]);