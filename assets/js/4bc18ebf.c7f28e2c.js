"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[7964],{77076:function(e,t,a){a.r(t),a.d(t,{frontMatter:function(){return i},contentTitle:function(){return m},metadata:function(){return p},toc:function(){return s},default:function(){return d}});var n=a(87462),o=a(63366),r=(a(67294),a(3905)),l=["components"],i={sidebar_position:2},m="Game Basics / Technical Gamecycle",p={unversionedId:"quickGuide/gameBasics",id:"quickGuide/gameBasics",isDocsHomePage:!1,title:"Game Basics / Technical Gamecycle",description:'When installation is complete, "Game Service" is initialy online and running.',source:"@site/docs/quickGuide/gameBasics.md",sourceDirName:"quickGuide",slug:"/quickGuide/gameBasics",permalink:"/docs/quickGuide/gameBasics",editUrl:"https://github.com/The-Microservice-Dungeon/docs/edit/main/docs/quickGuide/gameBasics.md",tags:[],version:"current",sidebarPosition:2,frontMatter:{sidebar_position:2},sidebar:"tutorialSidebar",previous:{title:"Project Installation",permalink:"/docs/quickGuide/installation"},next:{title:"Player Basics",permalink:"/docs/quickGuide/howToBuildAPlayer"}},s=[{value:"1. Create Game",id:"1-create-game",children:[{value:"1.1 Change Game Parameters",id:"11-change-game-parameters",children:[]}]},{value:"2. Let player join to created Game",id:"2-let-player-join-to-created-game",children:[]},{value:"3. Start Game(play)",id:"3-start-gameplay",children:[]},{value:"4. Player issues Commandes",id:"4-player-issues-commandes",children:[]},{value:"5. End Game(play)",id:"5-end-gameplay",children:[]},{value:"Warning",id:"warning",children:[]}],u={toc:s};function d(e){var t=e.components,a=(0,o.Z)(e,l);return(0,r.kt)("wrapper",(0,n.Z)({},u,a,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"game-basics--technical-gamecycle"},"Game Basics / Technical Gamecycle"),(0,r.kt)("p",null,'When installation is complete, "Game Service" is initialy online and running.'),(0,r.kt)("div",{className:"admonition admonition-danger alert alert--danger"},(0,r.kt)("div",{parentName:"div",className:"admonition-heading"},(0,r.kt)("h5",{parentName:"div"},(0,r.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,r.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"12",height:"16",viewBox:"0 0 12 16"},(0,r.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M5.05.31c.81 2.17.41 3.38-.52 4.31C3.55 5.67 1.98 6.45.9 7.98c-1.45 2.05-1.7 6.53 3.53 7.7-2.2-1.16-2.67-4.52-.3-6.61-.61 2.03.53 3.33 1.94 2.86 1.39-.47 2.3.53 2.27 1.67-.02.78-.31 1.44-1.13 1.81 3.42-.59 4.78-3.42 4.78-5.56 0-2.84-2.53-3.22-1.25-5.61-1.52.13-2.03 1.13-1.89 2.75.09 1.08-1.02 1.8-1.86 1.33-.67-.41-.66-1.19-.06-1.78C8.18 5.31 8.68 2.45 5.05.32L5.03.3l.02.01z"}))),"Take care")),(0,r.kt)("div",{parentName:"div",className:"admonition-content"},(0,r.kt)("p",{parentName:"div"},"There is some preparation needed, before it is possible to play."),(0,r.kt)("p",{parentName:"div"},"In the API documentation you will find, that it says you need an ",(0,r.kt)("strong",{parentName:"p"},"BearerAuth (admin)"),". You can ignore this information. ",(0,r.kt)("strong",{parentName:"p"},"It is obsolet"),".  "))),(0,r.kt)("h2",{id:"1-create-game"},"1. Create Game"),(0,r.kt)("p",null,"First step is to create a Game. For that you will use a REST call."),(0,r.kt)("blockquote",null,(0,r.kt)("p",{parentName:"blockquote"},(0,r.kt)("strong",{parentName:"p"},"POST"))),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"    http://{defaultHost}/games\n")),(0,r.kt)("blockquote",null,(0,r.kt)("p",{parentName:"blockquote"},(0,r.kt)("strong",{parentName:"p"},"example payload"))),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},'{\n    "maxRounds": 58,\n    "maxPlayers": 6\n}\n')),(0,r.kt)("p",null,"You should get a ",(0,r.kt)("inlineCode",{parentName:"p"},"UUID")," as a response! If not something went wrong."),(0,r.kt)("blockquote",null,(0,r.kt)("p",{parentName:"blockquote"},(0,r.kt)("strong",{parentName:"p"},"Response example payload"))),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},'{\n    "gameId": "d290f1ee-6c54-4b01-90e6-d701748f0851"\n}\n')),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},'A "Game" consists of rounds, explained in ',(0,r.kt)("a",{parentName:"p",href:"https://the-microservice-dungeon.github.io/docs/rules/gameloop"},"Gameloop"),". You have to specify the ammount of  rounds that will be played till the automatic end of a game.")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"Also you can specify the ammount of players that will be competing. For a game to start, it is not nessecery to reach the maximum ammount of players. The game mecahnics like mapsize will scale with the actual ammount of players at the ",(0,r.kt)("strong",{parentName:"p"},'"3. Start Game"'),"."))),(0,r.kt)("h3",{id:"11-change-game-parameters"},"1.1 Change Game Parameters"),(0,r.kt)("p",null,"Before ",(0,r.kt)("strong",{parentName:"p"},'"3. Start Game"')," or during a  ",(0,r.kt)("strong",{parentName:"p"},'"running"')," game you can change these parameters."),(0,r.kt)("h4",{id:"111-amount-of-rounds-in-a-game"},"1.1.1 amount of rounds in a game"),(0,r.kt)("p",null,"This changes how many rounds schould be played in a given game in total.\nSo you can lenghten or shorten a game.\nIf the game is allready ",(0,r.kt)("strong",{parentName:"p"},'"running"')," and you shorten below the ",(0,r.kt)("strong",{parentName:"p"},'"currentRoundNumber"')," af that game, that game will conclude."),(0,r.kt)("blockquote",null,(0,r.kt)("p",{parentName:"blockquote"},(0,r.kt)("strong",{parentName:"p"},"PATCH"))),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"    http://{defaultHost}/games/{gameId}/maxRounds\n")),(0,r.kt)("blockquote",null,(0,r.kt)("p",{parentName:"blockquote"},(0,r.kt)("strong",{parentName:"p"},"example payload"))),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},'{\n"maxRounds": 0\n}\n')),(0,r.kt)("h4",{id:"112-lenght-of-rounds-in-a-game"},"1.1.2 lenght of rounds in a game"),(0,r.kt)("p",null,"This changes how long the duration of the rounds will be.\nStandart lenght is 60 Seconds in total. Consisting of 3/4 ",(0,r.kt)("em",{parentName:"p"},"Command Collection time")," and 1/4 ",(0,r.kt)("em",{parentName:"p"},"Command Execution time")),(0,r.kt)("p",null,"Imput has to be given in ",(0,r.kt)("strong",{parentName:"p"},"MILLISECONDS(1000ms = 1s)"),"."),(0,r.kt)("blockquote",null,(0,r.kt)("p",{parentName:"blockquote"},(0,r.kt)("strong",{parentName:"p"},"PATCH"))),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"    http://{defaultHost}/games/{gameId}/duration\n")),(0,r.kt)("blockquote",null,(0,r.kt)("p",{parentName:"blockquote"},(0,r.kt)("strong",{parentName:"p"},"example payload"))),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},'{\n"duration": 0\n}\n')),(0,r.kt)("h2",{id:"2-let-player-join-to-created-game"},"2. Let player join to created Game"),(0,r.kt)("p",null,"Please refer to the Chapter ",(0,r.kt)("a",{parentName:"p",href:"https://the-microservice-dungeon.github.io/docs/quickGuide/howToBuildAPlayer"},"Player Basics")),(0,r.kt)("h2",{id:"3-start-gameplay"},"3. Start Game(play)"),(0,r.kt)("p",null,"The start of a game is simple. Just use this REST Call"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"    http://{defaultHost}/games/{gameId}/gameCommands/start\n")),(0,r.kt)("p",null,"You can controll if a game is running with the REST calls:"),(0,r.kt)("blockquote",null,(0,r.kt)("p",{parentName:"blockquote"},(0,r.kt)("strong",{parentName:"p"},"GET"))),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"    http://{defaultHost}/games\n")),(0,r.kt)("blockquote",null,(0,r.kt)("p",{parentName:"blockquote"},(0,r.kt)("strong",{parentName:"p"},"example payload"))),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},'[\n\n{\n\n    "gameId": "d290f1ee-6c54-4b01-90e6-d701748f0851",\n    "gameStatus": "running",\n    "maxPlayers": 6,\n    "maxRounds": 58,\n    "currentRoundNumber": 0,\n    "roundLengthInMillis": 60000,\n    "participatingPlayers": \n\n        [\n            "d290f1ee-6c54-4b01-90e6-d701748f0851"\n        ]\n    }\n\n]\n')),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},'"gameStatus": "running"')," will signalise you that a game is running.")),(0,r.kt)("p",null,"Or you could look if the time is changed with this REST Call."),(0,r.kt)("blockquote",null,(0,r.kt)("p",{parentName:"blockquote"},(0,r.kt)("strong",{parentName:"p"},"GET"))),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"    http://{defaultHost}/games/{gameId}/time\n")),(0,r.kt)("blockquote",null,(0,r.kt)("p",{parentName:"blockquote"},(0,r.kt)("strong",{parentName:"p"},"example payload"))),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},'    {\n\n        "gameTime": 183,\n        "roundCount": 4,\n        "roundTime": 33\n\n    }\n')),(0,r.kt)("h2",{id:"4-player-issues-commandes"},"4. Player issues Commandes"),(0,r.kt)("p",null,"Please refer to the Chapter ",(0,r.kt)("a",{parentName:"p",href:"https://the-microservice-dungeon.github.io/docs/quickGuide/howToBuildAPlayer"},"Player Basics")),(0,r.kt)("h2",{id:"5-end-gameplay"},"5. End Game(play)"),(0,r.kt)("p",null,"There are three posipilities how a game should end."),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"The game has reached the round number, which was defined earlier.")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"You tried to change the maximum round number and the new value was lower than the current round count of the game.")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"You used the ",(0,r.kt)("strong",{parentName:"p"},"POST")," REST call to end a game."),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre"},"  http://{defaultHost}/games/{gameId}/gameCommands/end\n")))),(0,r.kt)("h2",{id:"warning"},"Warning"),(0,r.kt)("p",null,"There can only be one ",(0,r.kt)("strong",{parentName:"p"},"'started'")," game at a time.\nMake sure there is no ",(0,r.kt)("strong",{parentName:"p"},"'started'")," game with this REST call."),(0,r.kt)("blockquote",null,(0,r.kt)("p",{parentName:"blockquote"},(0,r.kt)("strong",{parentName:"p"},"GET"))),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"    http://{defaultHost}/games\n")),(0,r.kt)("p",null,"The response will look like this. Pay attention to the ",(0,r.kt)("strong",{parentName:"p"},'"gameStatus": "running"'),"."),(0,r.kt)("blockquote",null,(0,r.kt)("p",{parentName:"blockquote"},(0,r.kt)("strong",{parentName:"p"},"example response payload"))),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},'[\n    {\n    "gameId": "d290f1ee-6c54-4b01-90e6-d701748f0851",\n    "gameStatus": "running",\n    "maxPlayers": 6,\n    "maxRounds": 58,\n    "currentRoundNumber": 0,\n    "roundLengthInMillis": 60000,\n    "participatingPlayers": [\n    "d290f1ee-6c54-4b01-90e6-d701748f0851"\n    ]\n    }\n]\n')))}d.isMDXComponent=!0}}]);